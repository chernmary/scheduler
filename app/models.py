from sqlalchemy import Column, Integer, String, Date, Boolean, ForeignKey
from sqlalchemy.orm import relationship
from app.dp_base import Base  # –±–∞–∑–∞ —Ç–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –æ—Ç—Å—é–¥–∞

# üßç –°–æ—Ç—Ä—É–¥–Ω–∏–∫
class Employee(Base):
    __tablename__ = "employees"

    id = Column(Integer, primary_key=True, index=True)
    full_name = Column(String, nullable=False)
    birth_date = Column(Date, nullable=True)
    phone = Column(String, nullable=True)
    telegram_nick = Column(String, nullable=True)
    notes = Column(String, nullable=True)

    medical_book_expiry = Column(Date, nullable=True)
    on_sick_leave = Column(Boolean, default=False)
    is_helper = Column(Boolean, default=False)

    shifts = relationship("Shift", back_populates="employee", cascade="all, delete")
    settings = relationship("EmployeeSetting", back_populates="employee", cascade="all, delete")

# üìç –õ–æ–∫–∞—Ü–∏—è
class Location(Base):
    __tablename__ = "locations"

    id = Column(Integer, primary_key=True, index=True)
    name = Column(String, unique=True, nullable=False)
    order = Column(Integer, nullable=False)  # –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    zone = Column(String, nullable=False)


    shifts = relationship("Shift", back_populates="location", cascade="all, delete")

# üìÖ –°–º–µ–Ω–∞
class Shift(Base):
    __tablename__ = "shifts"

    id = Column(Integer, primary_key=True, index=True)

    employee_id = Column(Integer, ForeignKey("employees.id"), nullable=False)
    employee = relationship("Employee", back_populates="shifts")

    location_id = Column(Integer, ForeignKey("locations.id"), nullable=False)
    location = relationship("Location", back_populates="shifts")

    date = Column(Date, nullable=False)
    shift_type = Column(String, nullable=True)  # –µ—Å–ª–∏ –ø–æ—è–≤—è—Ç—Å—è —Ç–∏–ø—ã —Å–º–µ–Ω
    is_template = Column(Boolean, default=False)

# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
class EmployeeSetting(Base):
    __tablename__ = "employee_settings"

    id = Column(Integer, primary_key=True, index=True)
    employee_id = Column(Integer, ForeignKey("employees.id"), nullable=False)
    location_id = Column(Integer, ForeignKey("locations.id"), nullable=False)

    is_preferred = Column(Boolean, default=False)  # –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –∑–¥–µ—Å—å
    is_allowed = Column(Boolean, default=True)     # –º–æ–∂–Ω–æ –ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —ç—Ç–æ–π –ª–æ–∫–∞—Ü–∏–∏

    employee = relationship("Employee", back_populates="settings")
    location = relationship("Location")

