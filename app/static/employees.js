// ==== –ë–ê–ó–ê API (JSON) ====
const API_BASE = '/employees'; // –±—ã–ª–æ '/admin/employees'

// ==== –≠–õ–ï–ú–ï–ù–¢–´ ====
const tabMain = document.getElementById('tab-main');
const tabHelpers = document.getElementById('tab-helpers');
const tbodyMain = document.getElementById('employees-tbody');
const tbodyHelpers = document.getElementById('helpers-tbody');

const modal = document.getElementById('emp-modal');
const empForm = document.getElementById('emp-form');
const btnCancel = document.getElementById('btn-cancel');

let currentRole = 'main'; // 'main' | 'helper'

// ===================== –£—Ç–∏–ª–∏—Ç—ã =====================
async function jsonFetch(url, options = {}) {
  const res = await fetch(url, options);
  if (!res.ok) throw new Error(`HTTP ${res.status}`);
  return res.json();
}
function renderError(tbody) {
  tbody.innerHTML = `<tr><td colspan="3">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</td></tr>`;
}

// ===================== –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ =====================
async function loadEmployees(role) {
  const tbody = role === 'helper' ? tbodyHelpers : tbodyMain;

  try {
    const data = await jsonFetch(`${API_BASE}?is_helper=${role === 'helper' ? 'true' : 'false'}`);
    tbody.innerHTML = '';

    if (!data.length) {
      tbody.innerHTML = `<tr><td colspan="3">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</td></tr>`;
      return;
    }

    data.forEach(emp => {
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${emp.full_name}</td>
        <td>${emp.on_sick_leave ? '–î–∞' : '–ù–µ—Ç'}</td>
        <td class="actions-col">
          <button class="btn" data-edit="${emp.id}">‚úèÔ∏è</button>
          <button class="btn danger" data-del="${emp.id}">üóëÔ∏è</button>
          ${
            role === 'main'
              ? `<button class="btn" data-move="${emp.id}" data-action="to-helper">‚û°Ô∏è –•–µ–ª–ø–µ—Ä</button>`
              : `<button class="btn" data-move="${emp.id}" data-action="to-main">‚¨ÖÔ∏è –û—Å–Ω–æ–≤–Ω–æ–π</button>`
          }
        </td>
      `;
      tbody.appendChild(tr);
    });

  } catch (e) {
    renderError(tbody);
  }
}

function refreshAll() {
  loadEmployees('main');
  loadEmployees('helper');
}

// –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–Ω–æ–ø–∫–∞–º –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö
[tbodyMain, tbodyHelpers].forEach(tbody => {
  tbody.addEventListener('click', async (e) => {
    const btn = e.target.closest('button');
    if (!btn) return;

    // –£–¥–∞–ª–µ–Ω–∏–µ
    if (btn.dataset.del) {
      const id = btn.dataset.del;
      if (!confirm('–£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞?')) return;
      const res = await fetch(`${API_BASE}/${id}`, { method: 'DELETE' });
      if (res.ok) refreshAll(); else alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è');
      return;
    }

    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if (btn.dataset.edit) {
      const id = btn.dataset.edit;
      try {
        const emp = await jsonFetch(`${API_BASE}/${id}`); // –Ω—É–∂–µ–Ω GET /employees/{id}
        empForm.reset();
        empForm.full_name.value = emp.full_name ?? '';
        empForm.on_sick_leave.checked = !!emp.on_sick_leave;
        empForm.id.value = emp.id;
        document.getElementById('modal-title').textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞';
        modal.showModal();
      } catch {
        alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞');
      }
      return;
    }

    // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –º–µ–∂–¥—É —Ä–æ–ª—è–º–∏
    if (btn.dataset.move) {
      const id = btn.dataset.move;
      const action = btn.dataset.action; // 'to-helper' | 'to-main'
      try {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –º–µ–Ω—è–µ–º is_helper –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        const emp = await jsonFetch(`${API_BASE}/${id}`); // –Ω—É–∂–µ–Ω GET /employees/{id}
        const updated = {
          full_name: emp.full_name,
          on_sick_leave: !!emp.on_sick_leave,
          is_helper: action === 'to-helper'
        };
        const res = await fetch(`${API_BASE}/${id}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(updated)
        });
        if (res.ok) refreshAll(); else alert('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è');
      } catch {
        alert('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è');
      }
      return;
    }
  });
});

// ===================== –î–æ–±–∞–≤–ª–µ–Ω–∏–µ / —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ =====================
document.getElementById('btn-add').addEventListener('click', () => {
  empForm.reset();
  empForm.id.value = '';
  document.getElementById('modal-title').textContent = '–ù–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫';
  modal.showModal();
});

btnCancel.addEventListener('click', () => {
  modal.close();
});

empForm.addEventListener('submit', async (e) => {
  e.preventDefault();
  // –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
  if (!empForm.reportValidity()) return;

  const fd = new FormData(empForm);
  const id = fd.get('id');
  const payload = {
    full_name: fd.get('full_name'),
    is_helper: currentRole === 'helper',      // –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Ç–µ–∫—É—â—É—é –≤–∫–ª–∞–¥–∫—É
    on_sick_leave: fd.get('on_sick_leave') === 'on'
  };

  const method = id ? 'PUT' : 'POST';
  const url = id ? `${API_BASE}/${id}` : `${API_BASE}`;

  try {
    const res = await fetch(url, {
      method,
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload)
    });
    if (res.ok) {
      modal.close();
      refreshAll();
    } else {
      alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
    }
  } catch {
    alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
  }
});

// ===================== –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ =====================
tabMain.addEventListener('click', () => {
  currentRole = 'main';
  tabMain.classList.add('active');
  tabHelpers.classList.remove('active');
  document.getElementById('panel-main').classList.remove('hidden');
  document.getElementById('panel-helpers').classList.add('hidden');
  loadEmployees('main');
});

tabHelpers.addEventListener('click', () => {
  currentRole = 'helper';
  tabHelpers.classList.add('active');
  tabMain.classList.remove('active');
  document.getElementById('panel-helpers').classList.remove('hidden');
  document.getElementById('panel-main').classList.add('hidden');
  loadEmployees('helper');
});

// ===================== –°—Ç–∞—Ä—Ç =====================
refreshAll();
